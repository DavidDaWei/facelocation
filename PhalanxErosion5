/** 方陣型侵蝕白色PhalanxErosion 5*5**/
	private BufferedImage PhalanxErosionDouble(BufferedImage image){

		int w = image.getWidth();
		int h = image.getHeight();
		for (int x = 2; x < w - 2; x += 5) {
			for (int y = 2; y < h - 2; y += 5) {

				// 白色 =16777215
				if (!iswhite(image.getRGB(x, y))) {

					int color = Color.black.getRGB();
					image.setRGB(x, y, color);
					image.setRGB(x, y - 1, color);
					image.setRGB(x, y + 1, color);
					image.setRGB(x - 1, y, color);
					image.setRGB(x + 1, y, color);

					/* 8 */
					image.setRGB(x - 1, y - 1, color);
					image.setRGB(x + 1, y - 1, color);
					image.setRGB(x - 1, y + 1, color);
					image.setRGB(x + 1, y + 1, color);
					
					/*雙層*/
					image.setRGB(x - 2, y - 2, color);//
					image.setRGB(x - 1, y - 2, color);//
					image.setRGB(x    , y - 2, color);//
					image.setRGB(x + 1, y - 2, color);//
					image.setRGB(x + 2, y - 2, color);//
					image.setRGB(x + 2, y - 1, color);//
					image.setRGB(x + 2, y    , color);//
					image.setRGB(x + 2, y + 1, color);//
					image.setRGB(x + 2, y + 2, color);//
					image.setRGB(x + 1, y + 2, color);//
					image.setRGB(x    , y + 2, color);//
					image.setRGB(x - 1, y + 2, color);//
					image.setRGB(x - 2, y + 2, color);//
					image.setRGB(x - 2, y + 1, color);//
					image.setRGB(x - 2, y    , color);//
					image.setRGB(x - 2, y - 1, color);//
					
				}
			}
		}
		return image;
	}
